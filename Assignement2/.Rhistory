X_500 <- cbind(X_500_0,X_500_1,X_500_2)
set.seed(12)
Neps <- c(rnorm(n6,0,4))
Y_new <- c(rep_len(1,n6))
Y_new <- alpha*X_500_0 + beta_1*X_500_1 + beta_2*X_500_2 + Neps
# create a loop to calculate the estimated beta for each subsample
estimated_beta_full <-matrix(1,nrow=3,ncol = 6)
ee <-c(rep(1,6))
for (i in 1:6){
X<-cbind(rep(1,n[i]),X_500_1[1:n[i]],X_500_2[1:n[i]])
estimated_beta_full[1:3,i]<-solve(t(X)%*%X)%*%t(X)%*%Y_new[1:n[i]]
e<-Y_new[1:n[i]]-X%*%estimated_beta_full[1:3,i]
ee[i]<-t(e)%*%e
}
print(estimated_beta_full)
stargazer(estimated_beta_full)
# generate a NEW sample of X, errors of n6=500 and calculate the full model
sec_X_500_0 <- c(rep_len(1,n6))
set.seed(14)
sec_X_500_1 <- c(runif(n6,0,10))
set.seed(27)
sec_X_500_2 <- c(runif(n6,0,10))
sec_X_500 <- cbind(sec_X_500_0,sec_X_500_1,sec_X_500_2)
set.seed(14)
sec_Neps <- c(rnorm(n6,0,4))
sec_Y_new <- c(rep_len(1,n6))
sec_Y_new <- alpha*sec_X_500_0 + beta_1*sec_X_500_1 + beta_2*sec_X_500_2 + sec_Neps
# create a loop to calculate the estimated beta for each subsample
sec_estimated_beta_full <-matrix(1,nrow=3,ncol = 6)
sec_ee <-c(rep(1,6))
for (i in 1:6){
X<-cbind(rep(1,n[i]),sec_X_500_1[1:n[i]],sec_X_500_2[1:n[i]])
sec_estimated_beta_full[1:3,i]<-solve(t(X)%*%X)%*%t(X)%*%sec_Y_new[1:n[i]]
e<-sec_Y_new[1:n[i]]-X%*%sec_estimated_beta_full[1:3,i]
ee[i]<-t(e)%*%e
}
print(sec_estimated_beta_full)
stargazer(sec_estimated_beta_full)
---
title: "Econometrics first assignment"
author: "Tomas Giro"
date: "September, 2018"
output:
pdf_document:
latex_engine: xelatex
fig_caption: TRUE
header-includes:
- \usepackage{fontspec}
- \usepackage{tikz}
---
```{r include=FALSE}
pdf.options(encoding='ISOLatin2.enc')
library(tikzDevice)
#This package is used to display the graphics in Latex font
knitr::opts_chunk$set(dev = "tikz")
knitr::opts_chunk$set(highlight = F)
knitr::opts_chunk$set(echo = F)
```
\tableofcontents
\newpage
\section{Exercise 1. Normal distribution}
$\forall x \in \mathbb R$
\begin{align*}
\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{1}{2}\Big(\frac{x-\mu_1}{\sigma}\Big)^2}e^{\Big(\frac{\mu_2-\mu_1}{\sigma^2}x-\frac{\mu^2_2-\mu^2_1}{2\sigma^2}\Big)}&=\frac{1}{\sqrt{2\pi}\sigma}exp\Big(\frac{1}{2\sigma^2}\Big[-x^2-\mu_1^2+2x\mu_1+2\mu_2x-2\mu_1x-\mu_2^2+\mu_1^2\Big]\Big)\\
&=\frac{1}{\sqrt{2\pi}\sigma}exp\Big(\frac{1}{2\sigma^2}\Big[-x^2-\mu_2^2+2\mu_2x\Big]\Big)\\
&=f_{\mu_{2} \sigma^2}(x)\\
\end{align*}
\section{Exercise 2. Exponential distribution}
\subsection{a)}
Let $s<\lambda$
\begin{align*}
M_X(s)&=\int_{\mathbb R_+}\lambda e^{sx}e^{-\lambda x}dx\\
&=\lambda\int_{\mathbb R_+}e^{x(s-\lambda)}dx\\
&=\frac{\lambda}{s-\lambda}\Big[e^{x(s-\lambda)}\Big]_0^{+\infty}\\
&=\frac{-\lambda}{s-\lambda}
\end{align*}
$$M'_X(s)=\frac{\lambda}{(s-\lambda)^2}$$
\begin{align*}
E(X)&=M'_X(0)\\
&=\frac{\lambda}{\lambda^2}\\
&=\frac{1}{\lambda}\\
\end{align*}
$$M''_X(s)=\frac{-2}{(s-\lambda)^3}$$
\begin{align*}
Var(X)&=M''_X(0)-(M'_X(0))^2\\
&=\frac{2\lambda}{\lambda^3}-\frac{1}{  \lambda^2}\\
&=\frac{1}{\lambda^2}\\
\end{align*}
\section{Exercise 2}
\subsection{b)}
```{r }
f= function(lambda,x){
return(lambda*exp(-lambda*x))
}
x=seq(0,5,0.1)
plot(x,f(3,x), type='l',
main='The exponential distribution',
ylab = 'f(x)',
col='red',
lty=2
)
lines(x,f(2,x),
col='red')
lines(x,f(1,x),
col='black')
legend('topright',c('1','2','3'),
col=c('black','red','red'),
lty=c(1,1,2),
title='lambda:')
```
\subsection{c)}
```{r}
x1=rexp(1000, rate=1)
par(mar = c(5, 5, 3, 5))
hist(x1,ylab='frequency',
freq=FALSE,
xlab = '',
main='',
sub='Histogram of 1000 simulations of an exponential distribution
(lambda=1) and plot of the theoretical frequency')
x2=seq(0,6,0.1)
lines(x2,f(1,x2),
xaxt = "n", yaxt = "n",
ylab = "", xlab = "",
type='l',
col='red')
legend("topright", c("theory", "simulation"),
col = c("red", "black"), lty = c(1, 1))
```
\par We can see that the histogram's shape resembles that of the theoretical distribution.
\subsection{d)}
Generate K= 2000 independent samples of n= 1000 independent exponential random variables with parameter lambda= 2
```{r}
K=t(replicate(2000,rexp(1000,rate=2)))
z=(1:2000)
for(k in (1:2000)){
x=K[k,(1:1000)]
z[k]=2*sqrt(1000)*(sum(x/1000)-1/2)
}
hist(z,
main='Histogram of z and theoretical distribution',
ylim=c(0,500),
xlim=c(-4,4))
lines(seq(-3,3,0.1),
1/sqrt(2*pi)*exp(-0.5*seq(-3,3,0.1)^2)*1000,
col='red')
legend(
"topright",c("theory","simulation"),lty=c(1,1),
col = c("red","black")
)
```
We can see that the simulated histogram resembles the theoretical distribution. The theoretical distribution of the $z_{k}$'s is $\mathcal N(0,1)$. Because, the TLC states that
for $X_n$ i.i.d. variables $\forall n\in\mathbb N$ such that for all $n \in \mathbb N, E(X_n)=\mu, E(|X_n^2|)< \infty, var(X_n)=\sigma^2$ and $S_n=\frac{\sum_{i=0}^nX_n}{n}$
\[ \sqrt n\frac{(S_n-\mu)}{\sigma}\xrightarrow{d}\mathcal N(0,1)\]
\section{Exercise 3:}
\subsection{c)}
```{r}
AAPL <- read.csv(file="./AAPL.csv", header=TRUE, sep=",")
GCSP <- read.csv(file="./^GSPC.csv", header=TRUE, sep=",")
plot(AAPL$Date,
main='Adjusted close value of SP 500 index and Apple Inc.',
sub='The values are renormalized so as to start\n with a common value of 100USD',
AAPL$Adj.Close/AAPL$Adj.Close[1]*100,
xaxt='n')
legend('topleft',c('SP','AAPL'),
fill=c('red','black'),
title='stocks:')
lines(GCSP$Date,GCSP$Adj.Close/GCSP$Adj.Close[1]*100,xaxt='n',col= 'red')
axis(side=1,
at=round(seq(1,length(AAPL$Date)-1,500)),
labels=AAPL$Date[round(seq(1,length(AAPL$Date)-1,500))])
```
\subsection{d)}
Compute the returns.
```{r}
returnApple=(AAPL$Adj.Close[(2:2518)]- AAPL$Adj.Close[(1:2517)])/AAPL$Adj.Close[(1:2517)]
hist(returnApple,
main='Histogram of the returns of Apple Inc. Stock',
sub='The data is the adjusted close value from the 30/09/2008 to the 30/09/2018',
xlab='Return'
)
```
```{r}
returnSAndP=(GCSP$Adj.Close[(2:2518)]- GCSP$Adj.Close[(1:2517)])/GCSP$Adj.Close[(1:2517)]
hist(returnSAndP,
main='Histogram of the returns of SP\'s 500  Stock',
sub='The data is the adjusted close value from the 30/09/2008 to the 30/09/2018',
xlab='Return'
)
```
\subsection{e)}
```{r}
library(e1071)
library(knitr)
summaryStatisticsAAPL <- data.frame("stock"="AAPL","minimum" = min(returnApple),
"maximum" =max(returnApple),
"mean" = mean(returnApple),
"median"=median(returnApple),
"variance"=var(returnApple),
"skewness"=skewness(returnApple),
"kurtosis"=kurtosis(returnApple))
summaryStatisticsSAndP<-data.frame("stock"="GCSP",
"minimum" = min(returnSAndP),
"maximum" =max(returnSAndP),
"mean" = mean(returnSAndP),
"median"=median(returnSAndP),
"variance"=var(returnSAndP),
"skewness"=skewness(returnSAndP),
"kurtosis"=kurtosis(returnSAndP))
summaryStatistics=rbind(summaryStatisticsAAPL,summaryStatisticsSAndP)
kable(summaryStatistics)
```
\par We can see that the AAPL stock has more extreme  returns. This means that the stock is likely to be more volatile than ^GCSP. Indeed we can confirm that by looking at the variance which is higher in AAPL's stock.
Apple has been called the most profitable company in history. This figures seem to show this fact. The mean of AAPL's stock is more than the double of the S&P's index. This shows that Apple has outperformed the market in average. According to Wikipedia, the Standard & Poor's 500, is an American stock market index based on the market capitalization of 500 large companies having common stock listed on the NYSE or NASDAQ, therefore it can represent the market.
The skewness of both stocks is negative, which is a problem for short term investors. A negative skewness shows the greater chance of extreme negative outcomes.
The kurtosis of both stocks is above 3. Kurtosis describes how heavy the tails of a distribution are. A kurtosis higher than 3 shows that the distribution of the returns are more heavily tailed than the corresponding normal distribution. This is common in the stock markets in which many times the normal distribution assumption has been criticised.
\subsection{f)}
```{r}
plot(returnApple,returnSAndP,
main='Scatter plot of the stocks returns versus the index returns',
xlab='Apple\'s returns',
ylab='SP returns')
coef=lm(returnSAndP~returnApple)$coefficients
abline(coef, col='red')
text( x=0.1,y=-0.05,paste("y = ",round(coef[2],digits = 3)," x + ",round(coef[1],digits = 5)),col = 'red')
```
The correlation of the two time series is `r cor(returnSAndP,returnApple)`.
We can observe that the two time series are quite correlated. Indeed, we expect Apple's stock to go up when the economy is growing which makes S&P's index rise.
x1=rexp(1000, rate=1)
par(mar = c(5, 5, 3, 5))
hist(x1,ylab='frequency',
freq=FALSE,
xlab = '',
main='',
sub='Histogram of 1000 simulations of an exponential distribution
(lambda=1) and plot of the theoretical frequency')
x2=seq(0,6,0.1)
lines(x2,f(1,x2),
xaxt = "n", yaxt = "n",
ylab = "", xlab = "",
type='l',
col='red')
legend("topright", c("theory", "simulation"),
col = c("red", "black"), lty = c(1, 1))
K=t(replicate(2000,rexp(1000,rate=2)))
z=(1:2000)
for(k in (1:2000)){
x=K[k,(1:1000)]
z[k]=2*sqrt(1000)*(sum(x/1000)-1/2)
}
hist(z,
main='Histogram of z and theoretical distribution',
ylim=c(0,500),
xlim=c(-4,4))
lines(seq(-3,3,0.1),
1/sqrt(2*pi)*exp(-0.5*seq(-3,3,0.1)^2)*1000,
col='red')
legend(
"topright",c("theory","simulation"),lty=c(1,1),
col = c("red","black")
)
legend(
"topright",c("simulated density","approximated normal"),lty=c(1,1),
col = c("black","red"))
df=read.csv('./SP500.csv')
x=data.matrix(df$SP500)
x=as.double(x)
library("MASS")
returns=x[(2:2518)]/x[(1:2517)]
returnsMinusOne=returns[!is.na(returns)]-1;
coeff=fitdistr(returnsMinusOne,"normal")
mean=coeff$estimate[1]
sd=coeff$estimate[2]
hist(returns-1,breaks = 100,freq = F,
main="Histogram of R-1")
lines(seq(-0.1,0.1,0.001),
1/sqrt(2*pi)/sd*exp(-0.5*((seq(-0.1,0.1,0.001)-mean)/sd)^2),
col='red')
legend(
"topright",c("simulated density","approximated normal"),lty=c(1,1),
col = c("black","red"))
## Econometrics -  Exercise Set 2
## Exercise 3
#=================================================================================================#
# Brodard Lionel, Giro Tomas, Marchal Antoine, Schonenberger Ivan                                                                                    #
#=================================================================================================#
install.packages("stargazer")
library(stargazer)
## Question a
## Parameters
alpha <- 0.5
beta_1 <- 0.8
beta_2 <- 1.3
real_beta <-rbind(alpha,beta_1,beta_2)
n <- 20
## Creation of the Matrix of X, the error term and calculation of Y
x_0 <- c(rep_len(1,n))
set.seed(12)
x_1 <- c(runif(n,0,10))
set.seed(1054)
x_2 <- c(runif(n,0,10))
set.seed(12)
X <- cbind(x_0,x_1,x_2)
eps <- c(rnorm(n,0,4))
Y <- c(rep_len(1,n))
Y <- alpha*x_0 + beta_1*x_1 + beta_2*x_2 + eps
print(cbind(Y,x_1,x_2)) # Print the 20 observations of y, x1,x2
## Question b
# Estimation of Beta
est_B <- matrix(0,1,3)
est_B<-solve(t(X)%*%X)%*%t(X)%*%Y
print(est_B)
## Question c
est_Y <- X%*%est_B #estimated Y
est_e <- Y-est_Y #residual error
# creation of equations that need to be tested
equa11<-t(est_e)%*%est_e
equa12 <- t(Y)%*%Y-t(est_B)%*%t(X)%*%Y-t(Y)%*%X%*%est_B+t(est_B)%*%t(X)%*%X%*%est_B
equa21<-t(est_B)%*%t(X)%*%Y
equa22<-t(Y)%*%X%*%est_B
# check if they are equal
all(round(equa11,3)==round(equa12,3))
all(round(equa21,3)==round(equa22,3))
## Question d
# find matrix M -> My=e -> M=(I-Xinv(X'X)X')
I <- diag(20)
M <- I-X%*%solve(t(X)%*%X)%*%t(X)
# round the matrix M and square it to be able to test idempotent
RoundedM=round(M,4)
RoundedM2=round(M%*%M,4)
# find matrix P -> P= Xinv(X'X)-X'
P <- X%*%solve(t(X)%*%X)%*%t(X)
# round the matrix P and square it to be able to test idempotent
RoundedP=round(P,4)
RoundedP2=round(P%*%P,4)
# to test if they are symmetric and idempotent
#symetry testing
all(RoundedM==t(RoundedM))
all(RoundedP==t(RoundedP))
#idempotent testing
all(RoundedM2==RoundedM)
all(RoundedP2==RoundedP)
message("Is the Matrix M symetric? ", all(RoundedM==t(RoundedM)))
message("Is the Matrix P symetric? ", all(RoundedP==t(RoundedP)))
message("Is the Matrix M idempotent? ", all(RoundedM2==RoundedM))
message("Is the Matrix P idempotent? ", all(RoundedP2==RoundedP))
## Question e
# partial model
px_0 <- x_0
px_1 <- x_1
pX <- cbind(px_0,px_1)
pest_B <- matrix(0,1,3)
pest_B <- solve(t(pX)%*%pX)%*%t(pX)%*%Y
pest_Y <- pX%*%pest_B
pest_e <- Y-pest_Y
print(pest_B)
# SSE calculation
fSSE <- t(est_e)%*%est_e
pSSE <- t(pest_e)%*%pest_e
print(fSSE)
print(pSSE)
SSE<- data.frame("Full Model SSE" =fSSE, "Partial Model SSE" =pSSE)
## Point f
# R2 and ajusted R2 calculation
# SSR calculation est_Y-avY
# compute average of y
mean_Y <- c(rep_len(mean(Y),n))
# fSSR <-
fSSR <- sum((est_Y-mean_Y)^2)
# pSSR <-
pSSR <- sum((pest_Y-mean_Y)^2)
# SST calculation
# fSST <-
fSST <- sum((Y-mean_Y)^2)
# pSST <-
pSST <- sum((Y-mean_Y)^2)
# R squared
fR2 <- 1-(fSSE/fSST)
pR2 <- 1-(pSSE/pSST)
print(fR2)
print(pR2)
# Adjusted-R squared = 1 - ((1-R2)(n-1)/(n-k-1)), where k= number of independant regressor
fk <- 2
pk <- 1
fAR2 <- 1-((1-fR2)*(n-1)/(n-fk-1))
pAR2 <- 1-((1-pR2)*(n-1)/(n-pk-1))
print(fAR2)
print(pAR2)
R2 <- matrix(c(fR2,fAR2,pR2,pAR2),ncol=2,byrow=TRUE)
colnames(R2) <- c("Squared R","Adjusted Squared R")
rownames(R2) <- c("Full Model","Partial Model")
R2 <- as.table(R2)
R2
## Question g
# create a vector n for the 6 subsamples
n1<-10
n2<-20
n3<-50
n4<-100
n5<-250
n6<-500
n=cbind(n1,n2,n3,n4,n5,n6)
# generate a sample of X, errors of n6=500 and calculate the full model
X_500_0 <- c(rep_len(1,n6))
set.seed(12)
X_500_1 <- c(runif(n6,0,10))
set.seed(1054)
X_500_2 <- c(runif(n6,0,10))
X_500 <- cbind(X_500_0,X_500_1,X_500_2)
set.seed(12)
Neps <- c(rnorm(n6,0,4))
Y_new <- c(rep_len(1,n6))
Y_new <- alpha*X_500_0 + beta_1*X_500_1 + beta_2*X_500_2 + Neps
# create a loop to calculate the estimated beta for each subsample
estimated_beta_full <-matrix(1,nrow=3,ncol = 6)
ee <-c(rep(1,6))
for (i in 1:6){
X<-cbind(rep(1,n[i]),X_500_1[1:n[i]],X_500_2[1:n[i]])
estimated_beta_full[1:3,i]<-solve(t(X)%*%X)%*%t(X)%*%Y_new[1:n[i]]
e<-Y_new[1:n[i]]-X%*%estimated_beta_full[1:3,i]
ee[i]<-t(e)%*%e
}
print(estimated_beta_full)
stargazer(estimated_beta_full)
# generate a NEW sample of X, errors of n6=500 and calculate the full model
sec_X_500_0 <- c(rep_len(1,n6))
set.seed(14)
sec_X_500_1 <- c(runif(n6,0,10))
set.seed(27)
sec_X_500_2 <- c(runif(n6,0,10))
sec_X_500 <- cbind(sec_X_500_0,sec_X_500_1,sec_X_500_2)
set.seed(14)
sec_Neps <- c(rnorm(n6,0,4))
sec_Y_new <- c(rep_len(1,n6))
sec_Y_new <- alpha*sec_X_500_0 + beta_1*sec_X_500_1 + beta_2*sec_X_500_2 + sec_Neps
# create a loop to calculate the estimated beta for each subsample
sec_estimated_beta_full <-matrix(1,nrow=3,ncol = 6)
sec_ee <-c(rep(1,6))
for (i in 1:6){
X<-cbind(rep(1,n[i]),sec_X_500_1[1:n[i]],sec_X_500_2[1:n[i]])
sec_estimated_beta_full[1:3,i]<-solve(t(X)%*%X)%*%t(X)%*%sec_Y_new[1:n[i]]
e<-sec_Y_new[1:n[i]]-X%*%sec_estimated_beta_full[1:3,i]
ee[i]<-t(e)%*%e
}
print(sec_estimated_beta_full)
stargazer(sec_estimated_beta_full)
library(e1071)
library(knitr)
summaryStatisticsAAPL <- data.frame("stock"="AAPL","minimum" = min(returnApple),
"maximum" =max(returnApple),
"mean" = mean(returnApple),
"median"=median(returnApple),
"variance"=var(returnApple),
"skewness"=skewness(returnApple),
"kurtosis"=kurtosis(returnApple))
returnApple=(AAPL$Adj.Close[(2:2518)]- AAPL$Adj.Close[(1:2517)])/AAPL$Adj.Close[(1:2517)]
AAPL <- read.csv(file="./AAPL.csv", header=TRUE, sep=",")
GCSP <- read.csv(file="./^GSPC.csv", header=TRUE, sep=",")
plot(AAPL$Date,
main='Adjusted close value of SP 500 index and Apple Inc.',
sub='The values are renormalized so as to start\n with a common value of 100USD',
AAPL$Adj.Close/AAPL$Adj.Close[1]*100,
xaxt='n')
legend('topleft',c('SP','AAPL'),
fill=c('red','black'),
title='stocks:')
lines(GCSP$Date,GCSP$Adj.Close/GCSP$Adj.Close[1]*100,xaxt='n',col= 'red')
axis(side=1,
at=round(seq(1,length(AAPL$Date)-1,500)),
labels=AAPL$Date[round(seq(1,length(AAPL$Date)-1,500))])
library(e1071)
library(knitr)
summaryStatisticsAAPL <- data.frame("stock"="AAPL","minimum" = min(returnApple),
"maximum" =max(returnApple),
"mean" = mean(returnApple),
"median"=median(returnApple),
"variance"=var(returnApple),
"skewness"=skewness(returnApple),
"kurtosis"=kurtosis(returnApple))
returnApple=(AAPL$Adj.Close[(2:2518)]- AAPL$Adj.Close[(1:2517)])/AAPL$Adj.Close[(1:2517)]
hist(returnApple,
main='Histogram of the returns of Apple Inc. Stock',
sub='The data is the adjusted close value from the 30/09/2008 to the 30/09/2018',
xlab='Return'
)
returnSAndP=(GCSP$Adj.Close[(2:2518)]- GCSP$Adj.Close[(1:2517)])/GCSP$Adj.Close[(1:2517)]
hist(returnSAndP,
main='Histogram of the returns of SP\'s 500  Stock',
sub='The data is the adjusted close value from the 30/09/2008 to the 30/09/2018',
xlab='Return'
)
library(e1071)
library(knitr)
summaryStatisticsAAPL <- data.frame("stock"="AAPL","minimum" = min(returnApple),
"maximum" =max(returnApple),
"mean" = mean(returnApple),
"median"=median(returnApple),
"variance"=var(returnApple),
"skewness"=skewness(returnApple),
"kurtosis"=kurtosis(returnApple))
summaryStatisticsSAndP<-data.frame("stock"="GCSP",
"minimum" = min(returnSAndP),
"maximum" =max(returnSAndP),
"mean" = mean(returnSAndP),
"median"=median(returnSAndP),
"variance"=var(returnSAndP),
"skewness"=skewness(returnSAndP),
"kurtosis"=kurtosis(returnSAndP))
summaryStatistics=rbind(summaryStatisticsAAPL,summaryStatisticsSAndP)
kable(summaryStatistics)
table(summaryStatistics)
kable(summaryStatistics)
