#a)
X_T_X <- matrix(c(100,123,96,109,123,252,125,189,96,125,167,146,109,189,146,168), nrow=4,ncol=4)
y_T_y <- c(3924)
X_T_y <- c(460,810,615,712)
n <- X_T_X[1,1]
cov <- matrix(, nrow=3,ncol=3)
for( i in 1:nrow(cov)){
for(j in 1:ncol(cov)){
col_i_mean <- X_T_X[i+1,1]/n
col_j_mean <- X_T_X[j+1,1]/n
#cov[i,j]<- X_T_X[1+i,1+j]-(col_i_mean)*X_T_X[j+1,1]-(col_j_mean)*X_T_X[i+1,1]+n*col_i_mean*col_j_mean
cov[i,j]<-(X_T_X[i+1,j+1]-n*col_i_mean*col_j_mean)/(sqrt(X_T_X[i+1,i+1]-n*col_i_mean*col_i_mean)*sqrt(X_T_X[j+1,j+1]-n*col_j_mean*col_j_mean))
}
}
print(cov)
#b)
## high condition number
ei <- eigen(X_T_X)$values
compute_cond<- function(X){
v <-eigen(X)$values
sqrt(max(v)/min(v))
}
cond <- compute_cond(X_T_X)
print(cond)
##drop_one_var <- which.min(c(compute_cond(X_T_X[-1,-1]),compute_cond(X_T_X[-2,-2]),compute_cond(X_T_X[-3,-3])))
#remove second variable or third one
##corrected_X_T_X <- X_T_X[-drop_one_var,-drop_one_var]
##r_squared
##0.9912091
##0.987962
##0.9952639
#c)
vifs <-c()
betas <- c()
test <- c()
for(i in 1:3){
design_k <- solve(X_T_X[-(i+1),-(i+1)])
##problem here
val_Xt <- c(X_T_X[i+1,1],X_T_X[i+1,2],X_T_X[i+1,3],X_T_X[i+1,4])
val_Xt <- val_Xt[-(i+1)]
beta_k <- design_k %*% val_Xt
betas <- cbind(betas,beta_k)
print(beta_k)
memes <- t(val_Xt)%*%design_k%*%val_Xt
vifs<- append(vifs,1/(1-memes/X_T_X[i+1,i+1]))
##cross <- 2*beta_k[1]*beta_k[2]*design_k[1,2] + 2*beta_k[1]*beta_k[3]*design_k[1,3] + 2*beta_k[2]*beta_k[3]*design_k[2,3]
##square <- design_k[1,1]*(beta_k[1]**2)+design_k[2,2]*(beta_k[2]**2)+design_k[3,3]*(beta_k[3]**2)
##norm_y_hat <- cross + square
##test <- append(test,norm_y_hat/X_T_X[i+1,i+1])
##vifs <- append(vifs, 1/(1-(norm_y_hat/X_T_X[i+1,i+1])))
}
vifs
#a)
X_T_X <- matrix(c(100,123,96,109,123,252,125,189,96,125,167,146,109,189,146,168), nrow=4,ncol=4)
y_T_y <- c(3924)
X_T_y <- c(460,810,615,712)
n <- X_T_X[1,1]
cov <- matrix(, nrow=3,ncol=3)
for( i in 1:nrow(cov)){
for(j in 1:ncol(cov)){
col_i_mean <- X_T_X[i+1,1]/n
col_j_mean <- X_T_X[j+1,1]/n
#cov[i,j]<- X_T_X[1+i,1+j]-(col_i_mean)*X_T_X[j+1,1]-(col_j_mean)*X_T_X[i+1,1]+n*col_i_mean*col_j_mean
cov[i,j]<-(X_T_X[i+1,j+1]-n*col_i_mean*col_j_mean)/(sqrt(X_T_X[i+1,i+1]-n*col_i_mean*col_i_mean)*sqrt(X_T_X[j+1,j+1]-n*col_j_mean*col_j_mean))
}
}
print(cov)
#b)
## high condition number
ei <- eigen(X_T_X)$values
compute_cond<- function(X){
v <-eigen(X)$values
sqrt(max(v)/min(v))
}
cond <- compute_cond(X_T_X)
print(cond)
##drop_one_var <- which.min(c(compute_cond(X_T_X[-1,-1]),compute_cond(X_T_X[-2,-2]),compute_cond(X_T_X[-3,-3])))
#remove second variable or third one
##corrected_X_T_X <- X_T_X[-drop_one_var,-drop_one_var]
##r_squared
##0.9912091
##0.987962
##0.9952639
#c)
vifs <-c()
betas <- c()
test <- c()
for(i in 1:3){
design_k <- solve(X_T_X[-(i+1),-(i+1)])
##problem here
val_Xt <- c(X_T_X[i+1,1],X_T_X[i+1,2],X_T_X[i+1,3],X_T_X[i+1,4])
val_Xt <- val_Xt[-(i+1)]
##beta_k <- design_k %*% val_Xt
##betas <- cbind(betas,beta_k)
##print(beta_k)
memes <- t(val_Xt)%*%design_k%*%val_Xt
vifs<- append(vifs,1/(1-memes/X_T_X[i+1,i+1]))
##cross <- 2*beta_k[1]*beta_k[2]*design_k[1,2] + 2*beta_k[1]*beta_k[3]*design_k[1,3] + 2*beta_k[2]*beta_k[3]*design_k[2,3]
##square <- design_k[1,1]*(beta_k[1]**2)+design_k[2,2]*(beta_k[2]**2)+design_k[3,3]*(beta_k[3]**2)
##norm_y_hat <- cross + square
##test <- append(test,norm_y_hat/X_T_X[i+1,i+1])
##vifs <- append(vifs, 1/(1-(norm_y_hat/X_T_X[i+1,i+1])))
}
vifs
#a)
X_T_X <- matrix(c(100,123,96,109,123,252,125,189,96,125,167,146,109,189,146,168), nrow=4,ncol=4)
y_T_y <- c(3924)
X_T_y <- c(460,810,615,712)
n <- X_T_X[1,1]
cov <- matrix(, nrow=3,ncol=3)
for( i in 1:nrow(cov)){
for(j in 1:ncol(cov)){
col_i_mean <- X_T_X[i+1,1]/n
col_j_mean <- X_T_X[j+1,1]/n
#cov[i,j]<- X_T_X[1+i,1+j]-(col_i_mean)*X_T_X[j+1,1]-(col_j_mean)*X_T_X[i+1,1]+n*col_i_mean*col_j_mean
cov[i,j]<-(X_T_X[i+1,j+1]-n*col_i_mean*col_j_mean)/(sqrt(X_T_X[i+1,i+1]-n*col_i_mean*col_i_mean)*sqrt(X_T_X[j+1,j+1]-n*col_j_mean*col_j_mean))
}
}
print(cov)
#b)
## high condition number
ei <- eigen(X_T_X)$values
compute_cond<- function(X){
v <-eigen(X)$values
sqrt(max(v)/min(v))
}
cond <- compute_cond(X_T_X)
print(cond)
##drop_one_var <- which.min(c(compute_cond(X_T_X[-1,-1]),compute_cond(X_T_X[-2,-2]),compute_cond(X_T_X[-3,-3])))
#remove second variable or third one
##corrected_X_T_X <- X_T_X[-drop_one_var,-drop_one_var]
##r_squared
##0.9912091
##0.987962
##0.9952639
#c)
vifs <-c()
betas <- c()
r_sq <- c()
for(i in 1:3){
design_k <- solve(X_T_X[-(i+1),-(i+1)])
##problem here
val_Xt <- c(X_T_X[i+1,1],X_T_X[i+1,2],X_T_X[i+1,3],X_T_X[i+1,4])
val_Xt <- val_Xt[-(i+1)]
##beta_k <- design_k %*% val_Xt
##betas <- cbind(betas,beta_k)
##print(beta_k)
memes <- t(val_Xt)%*%design_k%*%val_Xt
vifs<- append(vifs,1/(1-memes/X_T_X[i+1,i+1]))
r_sq <- append(r_sq,memes/X_T_X[i+1,i+1])
##cross <- 2*beta_k[1]*beta_k[2]*design_k[1,2] + 2*beta_k[1]*beta_k[3]*design_k[1,3] + 2*beta_k[2]*beta_k[3]*design_k[2,3]
##square <- design_k[1,1]*(beta_k[1]**2)+design_k[2,2]*(beta_k[2]**2)+design_k[3,3]*(beta_k[3]**2)
##norm_y_hat <- cross + square
##test <- append(test,norm_y_hat/X_T_X[i+1,i+1])
##vifs <- append(vifs, 1/(1-(norm_y_hat/X_T_X[i+1,i+1])))
}
##d)
r_sq
#a)
X_T_X <- matrix(c(100,123,96,109,123,252,125,189,96,125,167,146,109,189,146,168), nrow=4,ncol=4)
y_T_y <- c(3924)
X_T_y <- c(460,810,615,712)
n <- X_T_X[1,1]
cov <- matrix(, nrow=3,ncol=3)
for( i in 1:nrow(cov)){
for(j in 1:ncol(cov)){
col_i_mean <- X_T_X[i+1,1]/n
col_j_mean <- X_T_X[j+1,1]/n
#cov[i,j]<- X_T_X[1+i,1+j]-(col_i_mean)*X_T_X[j+1,1]-(col_j_mean)*X_T_X[i+1,1]+n*col_i_mean*col_j_mean
cov[i,j]<-(X_T_X[i+1,j+1]-n*col_i_mean*col_j_mean)/(sqrt(X_T_X[i+1,i+1]-n*col_i_mean*col_i_mean)*sqrt(X_T_X[j+1,j+1]-n*col_j_mean*col_j_mean))
}
}
print(cov)
#b)
## high condition number
ei <- eigen(X_T_X)$values
compute_cond<- function(X){
v <-eigen(X)$values
sqrt(max(v)/min(v))
}
cond <- compute_cond(X_T_X)
print(cond)
##drop_one_var <- which.min(c(compute_cond(X_T_X[-1,-1]),compute_cond(X_T_X[-2,-2]),compute_cond(X_T_X[-3,-3])))
#remove second variable or third one
##corrected_X_T_X <- X_T_X[-drop_one_var,-drop_one_var]
##r_squared
##0.9912091
##0.987962
##0.9952639
#c)
vifs <-c()
betas <- c()
r_sq <- c()
for(i in 1:3){
design_k <- inv(X_T_X[-(i+1),-(i+1)])
##problem here
val_Xt <- c(X_T_X[i+1,1],X_T_X[i+1,2],X_T_X[i+1,3],X_T_X[i+1,4])
val_Xt <- val_Xt[-(i+1)]
##beta_k <- design_k %*% val_Xt
##betas <- cbind(betas,beta_k)
##print(beta_k)
memes <- t(val_Xt)%*%design_k%*%val_Xt
vifs<- append(vifs,1/(1-memes/X_T_X[i+1,i+1]))
r_sq <- append(r_sq,memes/X_T_X[i+1,i+1])
##cross <- 2*beta_k[1]*beta_k[2]*design_k[1,2] + 2*beta_k[1]*beta_k[3]*design_k[1,3] + 2*beta_k[2]*beta_k[3]*design_k[2,3]
##square <- design_k[1,1]*(beta_k[1]**2)+design_k[2,2]*(beta_k[2]**2)+design_k[3,3]*(beta_k[3]**2)
##norm_y_hat <- cross + square
##test <- append(test,norm_y_hat/X_T_X[i+1,i+1])
##vifs <- append(vifs, 1/(1-(norm_y_hat/X_T_X[i+1,i+1])))
}
#a)
X_T_X <- matrix(c(100,123,96,109,123,252,125,189,96,125,167,146,109,189,146,168), nrow=4,ncol=4)
y_T_y <- c(3924)
X_T_y <- c(460,810,615,712)
n <- X_T_X[1,1]
cov <- matrix(, nrow=3,ncol=3)
for( i in 1:nrow(cov)){
for(j in 1:ncol(cov)){
col_i_mean <- X_T_X[i+1,1]/n
col_j_mean <- X_T_X[j+1,1]/n
#cov[i,j]<- X_T_X[1+i,1+j]-(col_i_mean)*X_T_X[j+1,1]-(col_j_mean)*X_T_X[i+1,1]+n*col_i_mean*col_j_mean
cov[i,j]<-(X_T_X[i+1,j+1]-n*col_i_mean*col_j_mean)/(sqrt(X_T_X[i+1,i+1]-n*col_i_mean*col_i_mean)*sqrt(X_T_X[j+1,j+1]-n*col_j_mean*col_j_mean))
}
}
print(cov)
#b)
## high condition number
ei <- eigen(X_T_X)$values
compute_cond<- function(X){
v <-eigen(X)$values
sqrt(max(v)/min(v))
}
cond <- compute_cond(X_T_X)
print(cond)
##drop_one_var <- which.min(c(compute_cond(X_T_X[-1,-1]),compute_cond(X_T_X[-2,-2]),compute_cond(X_T_X[-3,-3])))
#remove second variable or third one
##corrected_X_T_X <- X_T_X[-drop_one_var,-drop_one_var]
##r_squared
##0.9912091
##0.987962
##0.9952639
#c)
vifs <-c()
betas <- c()
r_sq <- c()
for(i in 1:3){
design_k <- solve(X_T_X[-(i+1),-(i+1)])
##problem here
val_Xt <- c(X_T_X[i+1,1],X_T_X[i+1,2],X_T_X[i+1,3],X_T_X[i+1,4])
val_Xt <- val_Xt[-(i+1)]
##beta_k <- design_k %*% val_Xt
##betas <- cbind(betas,beta_k)
##print(beta_k)
memes <- t(val_Xt)%*%design_k%*%val_Xt
vifs<- append(vifs,1/(1-memes/X_T_X[i+1,i+1]))
r_sq <- append(r_sq,memes/X_T_X[i+1,i+1])
##cross <- 2*beta_k[1]*beta_k[2]*design_k[1,2] + 2*beta_k[1]*beta_k[3]*design_k[1,3] + 2*beta_k[2]*beta_k[3]*design_k[2,3]
##square <- design_k[1,1]*(beta_k[1]**2)+design_k[2,2]*(beta_k[2]**2)+design_k[3,3]*(beta_k[3]**2)
##norm_y_hat <- cross + square
##test <- append(test,norm_y_hat/X_T_X[i+1,i+1])
##vifs <- append(vifs, 1/(1-(norm_y_hat/X_T_X[i+1,i+1])))
}
r_sq
t(c(1,2,3,4))
t(c(1,2,3,4))%*%c(1,2,3,4)
t(c(1,2,3,4))%*%c(1,2,3,4)
X_T_X
#a)
X_T_X <- matrix(c(100,123,96,109,123,252,125,189,96,125,167,146,109,189,146,168), nrow=4,ncol=4)
y_T_y <- c(3924)
X_T_y <- c(460,810,615,712)
n <- X_T_X[1,1]
cov <- matrix(, nrow=3,ncol=3)
for( i in 1:nrow(cov)){
for(j in 1:ncol(cov)){
col_i_mean <- X_T_X[i+1,1]/n
col_j_mean <- X_T_X[j+1,1]/n
#cov[i,j]<- X_T_X[1+i,1+j]-(col_i_mean)*X_T_X[j+1,1]-(col_j_mean)*X_T_X[i+1,1]+n*col_i_mean*col_j_mean
cov[i,j]<-(X_T_X[i+1,j+1]-n*col_i_mean*col_j_mean)/(sqrt(X_T_X[i+1,i+1]-n*col_i_mean*col_i_mean)*sqrt(X_T_X[j+1,j+1]-n*col_j_mean*col_j_mean))
}
}
print(cov)
#b)
## high condition number
ei <- eigen(X_T_X)$values
compute_cond<- function(X){
v <-eigen(X)$values
sqrt(max(v)/min(v))
}
cond <- compute_cond(X_T_X)
print(cond)
##drop_one_var <- which.min(c(compute_cond(X_T_X[-1,-1]),compute_cond(X_T_X[-2,-2]),compute_cond(X_T_X[-3,-3])))
#remove second variable or third one
##corrected_X_T_X <- X_T_X[-drop_one_var,-drop_one_var]
##r_squared
##0.9912091
##0.987962
##0.9952639
#c)
vifs <-c()
betas <- c()
r_sq <- c()
for(i in 1:3){
design_k <- solve(X_T_X[-(i+1),-(i+1)])
##problem here
val_Xt <- c(X_T_X[i+1,1],X_T_X[i+1,2],X_T_X[i+1,3],X_T_X[i+1,4])
val_Xt <- val_Xt[-(i+1)]
##beta_k <- design_k %*% val_Xt
##betas <- cbind(betas,beta_k)
##print(beta_k)
memes <- t(val_Xt)%*%design_k%*%val_Xt
vifs<- append(vifs,1/(1-memes/X_T_X[i+1,i+1]))
r_sq <- append(r_sq,memes/X_T_X[i+1,i+1])
##cross <- 2*beta_k[1]*beta_k[2]*design_k[1,2] + 2*beta_k[1]*beta_k[3]*design_k[1,3] + 2*beta_k[2]*beta_k[3]*design_k[2,3]
##square <- design_k[1,1]*(beta_k[1]**2)+design_k[2,2]*(beta_k[2]**2)+design_k[3,3]*(beta_k[3]**2)
##norm_y_hat <- cross + square
##test <- append(test,norm_y_hat/X_T_X[i+1,i+1])
##vifs <- append(vifs, 1/(1-(norm_y_hat/X_T_X[i+1,i+1])))
}
##d)
vifs
